{"version":3,"sources":["assets/images/avatar.svg","helper/i18n.ts","serviceWorker.ts","index.tsx","config/index.ts","components/PageHeader/styles.module.scss","api/profile.ts","hooks/useProfile.tsx","hooks/useToggleSideNav.tsx","components/PageHeader/index.tsx","components/SideNav/index.tsx","wrappers/AuthWrapper/index.tsx","wrappers/RootWrapper/index.tsx","App.tsx","components/SideNav/styles.module.scss","wrappers/AuthWrapper/styles.module.scss","api/axios.ts"],"names":["module","exports","i18n","use","initReactI18next","LanguageDetector","init","fallbackLng","debug","interpolation","escapeValue","resources","vi","translation","en","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","App","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","configs","APP_ENV","REACT_APP_ENV","API_DOMAIN","REACT_APP_API_DOMAIN","getProfile","sendGet","res","data","useProfile","enabled","useQuery","profile","refetchProfile","refetch","useToggleSideNav","queryClient","useQueryClient","collapsed","toggleSideNav","useCallback","setQueryData","PageHeader","history","useHistory","menu","style","minWidth","Item","key","onClick","Cookies","remove","push","className","styles","headerWrapper","height","width","cursor","d","menuWrapper","menuItem","overlay","trigger","fullName","username","icon","src","avatarImg","alt","SubMenu","Menu","SideNav","useLocation","useState","selectedKey","setSelectedKey","routes","text","url","HomeOutlined","TableOutlined","SettingOutlined","children","useEffect","forEach","route","pathname","startsWith","childRoute","classNames","sideNav","sideNavCollapsed","transition","logo","to","selectedKeys","defaultOpenKeys","mode","inlineCollapsed","map","title","Tasks","lazy","PageWrapper","isAuthenticated","pageWrapper","mainWrapper","pageContent","fallback","path","component","Login","SignUp","AppWrapper","exact","AuthWrapper","createBrowserHistory","QueryClient","defaultOptions","queries","refetchOnWindowFocus","cacheTime","retry","client","initialIsOpen","axiosInstance","Axios","create","timeout","baseURL","interceptors","request","token","Authorization","Promise","reject","logout","originalConfig","refreshToken","post","set","params","sendPost","queryParams","sendPut","put"],"mappings":"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","file":"static/js/main.03a5865a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.23d5a568.svg\";","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport vi from 'locales/vi.json';\nimport en from 'locales/en.json';\n\ni18n\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  .init({\n    fallbackLng: 'vi',\n    debug: false,\n    interpolation: {\n      escapeValue: false,\n    },\n    resources: {\n      vi: { translation: vi },\n      en: { translation: en },\n    },\n  });\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"styles/index.scss\";\nimport \"helper/i18n\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","const configs = {\n  APP_ENV: process.env.REACT_APP_ENV,\n  API_DOMAIN: process.env.REACT_APP_API_DOMAIN,\n};\n\nexport default configs;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"styles_headerWrapper__1dXC3\",\"menuWrapper\":\"styles_menuWrapper__sYJWz\",\"menuItem\":\"styles_menuItem__2gQnW\",\"badge\":\"styles_badge__1MNPi\"};","import { sendGet, sendPut } from './axios';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getProfile = () => sendGet('/v1/app/profile').then((res) => res.data);\nexport const updateProfile = () => sendPut('/v1/app/profile');\n","import { getProfile } from 'api/profile';\nimport { useQuery } from 'react-query';\n\nexport default function useProfile(enabled = false) {\n  const { data: profile, refetch: refetchProfile } = useQuery<any>('profile', getProfile, { enabled });\n  return { profile, refetchProfile };\n}\n","import { useCallback } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\n\nexport default function useToggleSideNav() {\n  const queryClient = useQueryClient();\n  const { data: collapsed } = useQuery<boolean>('showSideNav', () => false, { enabled: false });\n  const toggleSideNav = useCallback(() => {\n    queryClient.setQueryData('showSideNav', (data) => !data);\n  }, [queryClient]);\n  return { collapsed: Boolean(collapsed), toggleSideNav };\n}\n","import React, { useContext } from 'react';\nimport Cookies from 'js-cookie';\nimport avatarImg from 'assets/images/avatar.svg';\nimport { useHistory } from 'react-router-dom';\nimport styles from './styles.module.scss';\nimport { Menu, Dropdown } from 'antd';\nimport useProfile from 'hooks/useProfile';\nimport useToggleSideNav from 'hooks/useToggleSideNav';\n\nexport default function PageHeader() {\n  const history = useHistory();\n  const { profile } = useProfile();\n\n  const { toggleSideNav } = useToggleSideNav();\n\n  const handleLogout = () => {\n    Cookies.remove('token');\n    Cookies.remove('refreshToken');\n    history.push('/login');\n  };\n\n  const menu = (\n    <Menu style={{ minWidth: 200 }}>\n      <Menu.Item key=\"1\">Profile</Menu.Item>\n      <Menu.Item key=\"2\">Change Password</Menu.Item>\n      <Menu.Item key=\"3\" onClick={handleLogout}>\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className={styles.headerWrapper}>\n      <svg height=\"32\" width=\"32\" style={{ cursor: 'pointer' }} onClick={toggleSideNav}>\n        <path d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\" />\n      </svg>\n      <div className={styles.menuWrapper}>\n        <div className={styles.menuItem}>\n          <Dropdown overlay={menu} trigger={['click']}>\n            <div>\n              <span>{`Hi ${profile?.fullName || profile?.username}!`}</span>\n              &nbsp;\n              <img className={styles.icon} src={avatarImg} alt=\"\" />\n            </div>\n          </Dropdown>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport classNames from 'classnames';\nimport { HomeOutlined, TableOutlined, SettingOutlined } from '@ant-design/icons';\nimport styles from './styles.module.scss';\nimport useToggleSideNav from 'hooks/useToggleSideNav';\n\nconst { SubMenu } = Menu;\n\nexport default function SideNav() {\n  const { collapsed } = useToggleSideNav();\n  const location = useLocation();\n  const [selectedKey, setSelectedKey] = useState('1');\n\n  const routes = [\n    {\n      key: '1',\n      text: 'Home',\n      url: '/',\n      icon: <HomeOutlined />,\n    },\n    {\n      key: '2',\n      text: 'Tasks',\n      url: '/tasks',\n      icon: <TableOutlined />,\n    },\n    {\n      key: '3',\n      text: 'Settings',\n      icon: <SettingOutlined />,\n      children: [\n        {\n          key: '3.1',\n          text: 'Setting 1',\n          url: '/settings/setting1',\n        },\n        {\n          key: '3.2',\n          text: 'Setting 2',\n          url: '/settings/setting2',\n        },\n      ],\n    },\n  ];\n\n  useEffect(() => {\n    routes.forEach((route) => {\n      if (location.pathname.startsWith(route.url || '###')) {\n        setSelectedKey(route.key);\n      }\n      if (route.children) {\n        route.children.forEach((childRoute) => {\n          if (location.pathname.startsWith(childRoute.url || '###')) {\n            setSelectedKey(childRoute.key);\n          }\n        });\n      }\n    });\n  }, [location.pathname]);\n\n  return (\n    <div\n      className={classNames({\n        [styles.sideNav]: true,\n        [styles.sideNavCollapsed]: collapsed,\n      })}\n      style={{ width: collapsed ? 80 : 250, transition: 'width 0.3s' }}\n    >\n      <Link className={styles.logo} to=\"/index\">\n        HOME\n      </Link>\n      <Menu selectedKeys={[selectedKey]} defaultOpenKeys={[]} mode=\"inline\" inlineCollapsed={collapsed}>\n        {routes.map((route) => {\n          if (route.children) {\n            return (\n              <SubMenu key={route.key} icon={route.icon} title={route.text}>\n                {route.children?.map((childRoute) => (\n                  <Menu.Item key={childRoute.key}>\n                    <Link to={childRoute.url}>{childRoute.text}</Link>\n                  </Menu.Item>\n                ))}\n              </SubMenu>\n            );\n          }\n          return (\n            <Menu.Item key={route.key} icon={route.icon}>\n              <Link to={route.url}>{route.text}</Link>\n            </Menu.Item>\n          );\n        })}\n      </Menu>\n    </div>\n  );\n}\n","import React, { lazy, Suspense } from 'react';\nimport Cookies from 'js-cookie';\nimport PageHeader from 'components/PageHeader';\nimport SideNav from 'components/SideNav';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport styles from './styles.module.scss';\nimport { useQuery } from 'react-query';\nimport { getProfile } from 'api/profile';\nimport useProfile from 'hooks/useProfile';\n\nconst Tasks = lazy(() => import('pages/Tasks'));\n\nexport default function PageWrapper() {\n  const isAuthenticated = !!Cookies.get('token');\n  const { profile } = useProfile(isAuthenticated);\n\n  if (!isAuthenticated) return <Redirect to=\"/login\" />;\n  if (!profile) return null;\n  return (\n    <div className={styles.pageWrapper}>\n      <SideNav />\n      <div className={styles.mainWrapper}>\n        <PageHeader />\n        <div className={styles.pageContent}>\n          <Suspense fallback={null}>\n            <Switch>\n              <Route path=\"/tasks\" component={Tasks} />\n            </Switch>\n          </Suspense>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AuthWrapper from 'wrappers/AuthWrapper';\n\nconst Login = lazy(() => import('pages/Login'));\nconst SignUp = lazy(() => import('pages/SignUp'));\n\nexport default function AppWrapper() {\n  return (\n    <div className=\"root-wrapper\">\n      <Switch>\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/sign-up\" exact component={SignUp} />\n        <Route path=\"/\" component={AuthWrapper} />\n      </Switch>\n    </div>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { createBrowserHistory } from 'history';\nimport RootWrapper from './wrappers/RootWrapper';\nimport { Router } from 'react-router-dom';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport configs from 'config';\n\nexport const history = createBrowserHistory();\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      cacheTime: 24 * 3600 * 1000, // cache for 1 day\n      retry: false,\n    },\n  },\n});\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router history={history}>\n        <Suspense fallback={null}>\n          <RootWrapper />\n        </Suspense>\n      </Router>\n      {configs.APP_ENV !== 'prod' && <ReactQueryDevtools initialIsOpen={false} />}\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideNav\":\"styles_sideNav__2wYqf\",\"logo\":\"styles_logo__5Hh6e\",\"sideNavCollapsed\":\"styles_sideNavCollapsed__1hgzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"styles_pageWrapper__4g74w\",\"mainWrapper\":\"styles_mainWrapper__39_4P\",\"pageContent\":\"styles_pageContent__MdTwM\"};","import Axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { history } from '../App';\nimport configs from '../config';\n\nconst axiosInstance = Axios.create({\n  timeout: 3 * 60 * 1000,\n  baseURL: configs.API_DOMAIN,\n});\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // eslint-disable-next-line no-param-reassign\n    const token = Cookies.get('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nconst logout = () => {\n  Cookies.remove('token');\n  Cookies.remove('refreshToken');\n  history.push('/');\n};\naxiosInstance.interceptors.response.use(\n  (response) => response,\n  (error: any) => {\n    const originalConfig = error.config;\n    if (error.response.status !== 401) {\n      return Promise.reject(error);\n    }\n    const refreshToken = Cookies.get('refreshToken');\n    if (!refreshToken) {\n      logout();\n      return Promise.reject(error);\n    }\n    return Axios.post(`${configs.API_DOMAIN}/v1/app/auth/request-access-token`, {\n      refreshToken,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          const data = res.data.data;\n          Cookies.set('token', data.token);\n          originalConfig.headers.Authorization = `Bearer ${data.token}`;\n          return Axios(originalConfig);\n        } else {\n          logout();\n          return Promise.reject(error);\n        }\n      })\n      .catch(() => {\n        logout();\n        return Promise.reject(error);\n      });\n  }\n);\n\nexport const sendGet = (url: string, params?: any) => axiosInstance.get(url, { params }).then((res) => res.data);\nexport const sendPost = (url: string, params?: any, queryParams?: any) =>\n  axiosInstance.post(url, params, { params: queryParams }).then((res) => res.data);\nexport const sendPut = (url: string, params?: any) => axiosInstance.put(url, params).then((res) => res.data);\nexport const sendPatch = (url: string, params?: any) => axiosInstance.patch(url, params).then((res) => res.data);\nexport const sendDelete = (url: string, params?: any) => axiosInstance.delete(url, { params }).then((res) => res.data);\n"],"sourceRoot":""}